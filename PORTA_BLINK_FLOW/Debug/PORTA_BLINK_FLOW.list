
PORTA_BLINK_FLOW.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000434  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005c8  080005c8  00002014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005c8  080005c8  00002014  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080005c8  080005c8  00002014  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080005c8  080005c8  00002014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005c8  080005c8  000015c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080005cc  080005cc  000015cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000014  20000000  080005d0  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000014  080005e4  00002014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  080005e4  00002030  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002014  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000104  00000000  00000000  00002044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000c1  00000000  00000000  00002148  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00002210  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  00002260  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000aef  00000000  00000000  00002293  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000020c  00000000  00000000  00002d82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00002ef1  00000000  00000000  00002f8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00005e7f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  00005ec4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  00005f44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000014 	.word	0x20000014
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080005b0 	.word	0x080005b0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000018 	.word	0x20000018
 80001d0:	080005b0 	.word	0x080005b0

080001d4 <delay>:

volatile unsigned int *GPIOA_MODER=(volatile unsigned int*)0x40020000;
volatile unsigned int *GPIOA_ODR  =(volatile unsigned int*)0x40020014;

void delay()
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
    for (unsigned int i = 0; i < 90000; i++) __asm("NOP");
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e003      	b.n	80001e8 <delay+0x14>
 80001e0:	bf00      	nop
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	3301      	adds	r3, #1
 80001e6:	607b      	str	r3, [r7, #4]
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	4a05      	ldr	r2, [pc, #20]	@ (8000200 <delay+0x2c>)
 80001ec:	4293      	cmp	r3, r2
 80001ee:	d9f7      	bls.n	80001e0 <delay+0xc>
}
 80001f0:	bf00      	nop
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	00015f8f 	.word	0x00015f8f

08000204 <main>:

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	*RCC_CR     &= ~(1<<16);
 8000208:	4b9b      	ldr	r3, [pc, #620]	@ (8000478 <main+0x274>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	681a      	ldr	r2, [r3, #0]
 800020e:	4b9a      	ldr	r3, [pc, #616]	@ (8000478 <main+0x274>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8000216:	601a      	str	r2, [r3, #0]
	*RCC_CR     |=  (1<<16);
 8000218:	4b97      	ldr	r3, [pc, #604]	@ (8000478 <main+0x274>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	681a      	ldr	r2, [r3, #0]
 800021e:	4b96      	ldr	r3, [pc, #600]	@ (8000478 <main+0x274>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8000226:	601a      	str	r2, [r3, #0]
	 while (!(*RCC_CR & (1 << 17)));
 8000228:	bf00      	nop
 800022a:	4b93      	ldr	r3, [pc, #588]	@ (8000478 <main+0x274>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000234:	2b00      	cmp	r3, #0
 8000236:	d0f8      	beq.n	800022a <main+0x26>

	*RCC_CFGR   &= ~(1<<0);
 8000238:	4b90      	ldr	r3, [pc, #576]	@ (800047c <main+0x278>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	681a      	ldr	r2, [r3, #0]
 800023e:	4b8f      	ldr	r3, [pc, #572]	@ (800047c <main+0x278>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	f022 0201 	bic.w	r2, r2, #1
 8000246:	601a      	str	r2, [r3, #0]
	*RCC_CFGR   |=  (1<<0);
 8000248:	4b8c      	ldr	r3, [pc, #560]	@ (800047c <main+0x278>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	4b8b      	ldr	r3, [pc, #556]	@ (800047c <main+0x278>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	f042 0201 	orr.w	r2, r2, #1
 8000256:	601a      	str	r2, [r3, #0]
	 while (((*RCC_CFGR >> 2) & 0x3) != 1);
 8000258:	bf00      	nop
 800025a:	4b88      	ldr	r3, [pc, #544]	@ (800047c <main+0x278>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	f003 030c 	and.w	r3, r3, #12
 8000264:	2b04      	cmp	r3, #4
 8000266:	d1f8      	bne.n	800025a <main+0x56>

	*RCC_AHB1ENR |=  (1<<0);
 8000268:	4b85      	ldr	r3, [pc, #532]	@ (8000480 <main+0x27c>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	681a      	ldr	r2, [r3, #0]
 800026e:	4b84      	ldr	r3, [pc, #528]	@ (8000480 <main+0x27c>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f042 0201 	orr.w	r2, r2, #1
 8000276:	601a      	str	r2, [r3, #0]

	*GPIOA_MODER &= ~(1<<0);
 8000278:	4b82      	ldr	r3, [pc, #520]	@ (8000484 <main+0x280>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	681a      	ldr	r2, [r3, #0]
 800027e:	4b81      	ldr	r3, [pc, #516]	@ (8000484 <main+0x280>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f022 0201 	bic.w	r2, r2, #1
 8000286:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<0);
 8000288:	4b7e      	ldr	r3, [pc, #504]	@ (8000484 <main+0x280>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	4b7d      	ldr	r3, [pc, #500]	@ (8000484 <main+0x280>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	f042 0201 	orr.w	r2, r2, #1
 8000296:	601a      	str	r2, [r3, #0]

	while(1)
	{

	*GPIOA_ODR  &=  ~(1<<0);
 8000298:	4b7b      	ldr	r3, [pc, #492]	@ (8000488 <main+0x284>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	4b7a      	ldr	r3, [pc, #488]	@ (8000488 <main+0x284>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	f022 0201 	bic.w	r2, r2, #1
 80002a6:	601a      	str	r2, [r3, #0]
	delay(1000);
 80002a8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80002ac:	f7ff ff92 	bl	80001d4 <delay>
	*GPIOA_ODR  |=   (1<<0);
 80002b0:	4b75      	ldr	r3, [pc, #468]	@ (8000488 <main+0x284>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	681a      	ldr	r2, [r3, #0]
 80002b6:	4b74      	ldr	r3, [pc, #464]	@ (8000488 <main+0x284>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f042 0201 	orr.w	r2, r2, #1
 80002be:	601a      	str	r2, [r3, #0]
	delay(300);
 80002c0:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80002c4:	f7ff ff86 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<2);
 80002c8:	4b6e      	ldr	r3, [pc, #440]	@ (8000484 <main+0x280>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	681a      	ldr	r2, [r3, #0]
 80002ce:	4b6d      	ldr	r3, [pc, #436]	@ (8000484 <main+0x280>)
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	f022 0204 	bic.w	r2, r2, #4
 80002d6:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<2);
 80002d8:	4b6a      	ldr	r3, [pc, #424]	@ (8000484 <main+0x280>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	681a      	ldr	r2, [r3, #0]
 80002de:	4b69      	ldr	r3, [pc, #420]	@ (8000484 <main+0x280>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	f042 0204 	orr.w	r2, r2, #4
 80002e6:	601a      	str	r2, [r3, #0]



	*GPIOA_ODR  &= ~(1<<1);
 80002e8:	4b67      	ldr	r3, [pc, #412]	@ (8000488 <main+0x284>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	681a      	ldr	r2, [r3, #0]
 80002ee:	4b66      	ldr	r3, [pc, #408]	@ (8000488 <main+0x284>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	f022 0202 	bic.w	r2, r2, #2
 80002f6:	601a      	str	r2, [r3, #0]
	delay(1000);
 80002f8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80002fc:	f7ff ff6a 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<1);
 8000300:	4b61      	ldr	r3, [pc, #388]	@ (8000488 <main+0x284>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	681a      	ldr	r2, [r3, #0]
 8000306:	4b60      	ldr	r3, [pc, #384]	@ (8000488 <main+0x284>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f042 0202 	orr.w	r2, r2, #2
 800030e:	601a      	str	r2, [r3, #0]
	delay(300);
 8000310:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000314:	f7ff ff5e 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<4);
 8000318:	4b5a      	ldr	r3, [pc, #360]	@ (8000484 <main+0x280>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	4b59      	ldr	r3, [pc, #356]	@ (8000484 <main+0x280>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	f022 0210 	bic.w	r2, r2, #16
 8000326:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<4);
 8000328:	4b56      	ldr	r3, [pc, #344]	@ (8000484 <main+0x280>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	4b55      	ldr	r3, [pc, #340]	@ (8000484 <main+0x280>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	f042 0210 	orr.w	r2, r2, #16
 8000336:	601a      	str	r2, [r3, #0]


	*GPIOA_ODR  &= ~(1<<2);
 8000338:	4b53      	ldr	r3, [pc, #332]	@ (8000488 <main+0x284>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	4b52      	ldr	r3, [pc, #328]	@ (8000488 <main+0x284>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	f022 0204 	bic.w	r2, r2, #4
 8000346:	601a      	str	r2, [r3, #0]
	delay(1000);
 8000348:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800034c:	f7ff ff42 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<2);
 8000350:	4b4d      	ldr	r3, [pc, #308]	@ (8000488 <main+0x284>)
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	681a      	ldr	r2, [r3, #0]
 8000356:	4b4c      	ldr	r3, [pc, #304]	@ (8000488 <main+0x284>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	f042 0204 	orr.w	r2, r2, #4
 800035e:	601a      	str	r2, [r3, #0]
	delay(300);
 8000360:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000364:	f7ff ff36 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<6);
 8000368:	4b46      	ldr	r3, [pc, #280]	@ (8000484 <main+0x280>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	681a      	ldr	r2, [r3, #0]
 800036e:	4b45      	ldr	r3, [pc, #276]	@ (8000484 <main+0x280>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8000376:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<6);
 8000378:	4b42      	ldr	r3, [pc, #264]	@ (8000484 <main+0x280>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	681a      	ldr	r2, [r3, #0]
 800037e:	4b41      	ldr	r3, [pc, #260]	@ (8000484 <main+0x280>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000386:	601a      	str	r2, [r3, #0]


	*GPIOA_ODR  &= ~(1<<3);
 8000388:	4b3f      	ldr	r3, [pc, #252]	@ (8000488 <main+0x284>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	681a      	ldr	r2, [r3, #0]
 800038e:	4b3e      	ldr	r3, [pc, #248]	@ (8000488 <main+0x284>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	f022 0208 	bic.w	r2, r2, #8
 8000396:	601a      	str	r2, [r3, #0]
	delay(1000);
 8000398:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800039c:	f7ff ff1a 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<3);
 80003a0:	4b39      	ldr	r3, [pc, #228]	@ (8000488 <main+0x284>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	681a      	ldr	r2, [r3, #0]
 80003a6:	4b38      	ldr	r3, [pc, #224]	@ (8000488 <main+0x284>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	f042 0208 	orr.w	r2, r2, #8
 80003ae:	601a      	str	r2, [r3, #0]
	delay(300);
 80003b0:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80003b4:	f7ff ff0e 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<8);
 80003b8:	4b32      	ldr	r3, [pc, #200]	@ (8000484 <main+0x280>)
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	681a      	ldr	r2, [r3, #0]
 80003be:	4b31      	ldr	r3, [pc, #196]	@ (8000484 <main+0x280>)
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80003c6:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<8);
 80003c8:	4b2e      	ldr	r3, [pc, #184]	@ (8000484 <main+0x280>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	681a      	ldr	r2, [r3, #0]
 80003ce:	4b2d      	ldr	r3, [pc, #180]	@ (8000484 <main+0x280>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80003d6:	601a      	str	r2, [r3, #0]


	*GPIOA_ODR  &= ~(1<<4);
 80003d8:	4b2b      	ldr	r3, [pc, #172]	@ (8000488 <main+0x284>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	681a      	ldr	r2, [r3, #0]
 80003de:	4b2a      	ldr	r3, [pc, #168]	@ (8000488 <main+0x284>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	f022 0210 	bic.w	r2, r2, #16
 80003e6:	601a      	str	r2, [r3, #0]
	delay(1000);
 80003e8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80003ec:	f7ff fef2 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<4);
 80003f0:	4b25      	ldr	r3, [pc, #148]	@ (8000488 <main+0x284>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	4b24      	ldr	r3, [pc, #144]	@ (8000488 <main+0x284>)
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	f042 0210 	orr.w	r2, r2, #16
 80003fe:	601a      	str	r2, [r3, #0]
	delay(100);
 8000400:	2064      	movs	r0, #100	@ 0x64
 8000402:	f7ff fee7 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<10);
 8000406:	4b1f      	ldr	r3, [pc, #124]	@ (8000484 <main+0x280>)
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	681a      	ldr	r2, [r3, #0]
 800040c:	4b1d      	ldr	r3, [pc, #116]	@ (8000484 <main+0x280>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8000414:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<10);
 8000416:	4b1b      	ldr	r3, [pc, #108]	@ (8000484 <main+0x280>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	681a      	ldr	r2, [r3, #0]
 800041c:	4b19      	ldr	r3, [pc, #100]	@ (8000484 <main+0x280>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000424:	601a      	str	r2, [r3, #0]


	*GPIOA_ODR  &= ~(1<<5);
 8000426:	4b18      	ldr	r3, [pc, #96]	@ (8000488 <main+0x284>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	681a      	ldr	r2, [r3, #0]
 800042c:	4b16      	ldr	r3, [pc, #88]	@ (8000488 <main+0x284>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	f022 0220 	bic.w	r2, r2, #32
 8000434:	601a      	str	r2, [r3, #0]
	delay(1000);
 8000436:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800043a:	f7ff fecb 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<5);
 800043e:	4b12      	ldr	r3, [pc, #72]	@ (8000488 <main+0x284>)
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	681a      	ldr	r2, [r3, #0]
 8000444:	4b10      	ldr	r3, [pc, #64]	@ (8000488 <main+0x284>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	f042 0220 	orr.w	r2, r2, #32
 800044c:	601a      	str	r2, [r3, #0]
    delay(100);
 800044e:	2064      	movs	r0, #100	@ 0x64
 8000450:	f7ff fec0 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<12);
 8000454:	4b0b      	ldr	r3, [pc, #44]	@ (8000484 <main+0x280>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	681a      	ldr	r2, [r3, #0]
 800045a:	4b0a      	ldr	r3, [pc, #40]	@ (8000484 <main+0x280>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8000462:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<12);
 8000464:	4b07      	ldr	r3, [pc, #28]	@ (8000484 <main+0x280>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	681a      	ldr	r2, [r3, #0]
 800046a:	4b06      	ldr	r3, [pc, #24]	@ (8000484 <main+0x280>)
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000472:	601a      	str	r2, [r3, #0]
 8000474:	e00a      	b.n	800048c <main+0x288>
 8000476:	bf00      	nop
 8000478:	20000000 	.word	0x20000000
 800047c:	20000004 	.word	0x20000004
 8000480:	20000008 	.word	0x20000008
 8000484:	2000000c 	.word	0x2000000c
 8000488:	20000010 	.word	0x20000010


	*GPIOA_ODR  &= ~(1<<6);
 800048c:	4b1f      	ldr	r3, [pc, #124]	@ (800050c <main+0x308>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	681a      	ldr	r2, [r3, #0]
 8000492:	4b1e      	ldr	r3, [pc, #120]	@ (800050c <main+0x308>)
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800049a:	601a      	str	r2, [r3, #0]
	delay(1000);
 800049c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80004a0:	f7ff fe98 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<6);
 80004a4:	4b19      	ldr	r3, [pc, #100]	@ (800050c <main+0x308>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	681a      	ldr	r2, [r3, #0]
 80004aa:	4b18      	ldr	r3, [pc, #96]	@ (800050c <main+0x308>)
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80004b2:	601a      	str	r2, [r3, #0]
	delay(100);
 80004b4:	2064      	movs	r0, #100	@ 0x64
 80004b6:	f7ff fe8d 	bl	80001d4 <delay>


	*GPIOA_MODER &= ~(1<<14);
 80004ba:	4b15      	ldr	r3, [pc, #84]	@ (8000510 <main+0x30c>)
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	681a      	ldr	r2, [r3, #0]
 80004c0:	4b13      	ldr	r3, [pc, #76]	@ (8000510 <main+0x30c>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80004c8:	601a      	str	r2, [r3, #0]
	*GPIOA_MODER |=  (1<<14);
 80004ca:	4b11      	ldr	r3, [pc, #68]	@ (8000510 <main+0x30c>)
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	681a      	ldr	r2, [r3, #0]
 80004d0:	4b0f      	ldr	r3, [pc, #60]	@ (8000510 <main+0x30c>)
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80004d8:	601a      	str	r2, [r3, #0]


	*GPIOA_ODR  &= ~(1<<7);
 80004da:	4b0c      	ldr	r3, [pc, #48]	@ (800050c <main+0x308>)
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	681a      	ldr	r2, [r3, #0]
 80004e0:	4b0a      	ldr	r3, [pc, #40]	@ (800050c <main+0x308>)
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80004e8:	601a      	str	r2, [r3, #0]
	delay(1000);
 80004ea:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80004ee:	f7ff fe71 	bl	80001d4 <delay>
	*GPIOA_ODR  |=  (1<<7);
 80004f2:	4b06      	ldr	r3, [pc, #24]	@ (800050c <main+0x308>)
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	681a      	ldr	r2, [r3, #0]
 80004f8:	4b04      	ldr	r3, [pc, #16]	@ (800050c <main+0x308>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000500:	601a      	str	r2, [r3, #0]
	delay(100);
 8000502:	2064      	movs	r0, #100	@ 0x64
 8000504:	f7ff fe66 	bl	80001d4 <delay>
	*GPIOA_ODR  &=  ~(1<<0);
 8000508:	bf00      	nop
 800050a:	e6c5      	b.n	8000298 <main+0x94>
 800050c:	20000010 	.word	0x20000010
 8000510:	2000000c 	.word	0x2000000c

08000514 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000514:	480d      	ldr	r0, [pc, #52]	@ (800054c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000516:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000518:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800051c:	480c      	ldr	r0, [pc, #48]	@ (8000550 <LoopForever+0x6>)
  ldr r1, =_edata
 800051e:	490d      	ldr	r1, [pc, #52]	@ (8000554 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000520:	4a0d      	ldr	r2, [pc, #52]	@ (8000558 <LoopForever+0xe>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000524:	e002      	b.n	800052c <LoopCopyDataInit>

08000526 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000526:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000528:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052a:	3304      	adds	r3, #4

0800052c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800052c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000530:	d3f9      	bcc.n	8000526 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000532:	4a0a      	ldr	r2, [pc, #40]	@ (800055c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000534:	4c0a      	ldr	r4, [pc, #40]	@ (8000560 <LoopForever+0x16>)
  movs r3, #0
 8000536:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000538:	e001      	b.n	800053e <LoopFillZerobss>

0800053a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800053c:	3204      	adds	r2, #4

0800053e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000540:	d3fb      	bcc.n	800053a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000542:	f000 f811 	bl	8000568 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000546:	f7ff fe5d 	bl	8000204 <main>

0800054a <LoopForever>:

LoopForever:
  b LoopForever
 800054a:	e7fe      	b.n	800054a <LoopForever>
  ldr   r0, =_estack
 800054c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000550:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000554:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 8000558:	080005d0 	.word	0x080005d0
  ldr r2, =_sbss
 800055c:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 8000560:	20000030 	.word	0x20000030

08000564 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000564:	e7fe      	b.n	8000564 <ADC_IRQHandler>
	...

08000568 <__libc_init_array>:
 8000568:	b570      	push	{r4, r5, r6, lr}
 800056a:	4d0d      	ldr	r5, [pc, #52]	@ (80005a0 <__libc_init_array+0x38>)
 800056c:	4c0d      	ldr	r4, [pc, #52]	@ (80005a4 <__libc_init_array+0x3c>)
 800056e:	1b64      	subs	r4, r4, r5
 8000570:	10a4      	asrs	r4, r4, #2
 8000572:	2600      	movs	r6, #0
 8000574:	42a6      	cmp	r6, r4
 8000576:	d109      	bne.n	800058c <__libc_init_array+0x24>
 8000578:	4d0b      	ldr	r5, [pc, #44]	@ (80005a8 <__libc_init_array+0x40>)
 800057a:	4c0c      	ldr	r4, [pc, #48]	@ (80005ac <__libc_init_array+0x44>)
 800057c:	f000 f818 	bl	80005b0 <_init>
 8000580:	1b64      	subs	r4, r4, r5
 8000582:	10a4      	asrs	r4, r4, #2
 8000584:	2600      	movs	r6, #0
 8000586:	42a6      	cmp	r6, r4
 8000588:	d105      	bne.n	8000596 <__libc_init_array+0x2e>
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000590:	4798      	blx	r3
 8000592:	3601      	adds	r6, #1
 8000594:	e7ee      	b.n	8000574 <__libc_init_array+0xc>
 8000596:	f855 3b04 	ldr.w	r3, [r5], #4
 800059a:	4798      	blx	r3
 800059c:	3601      	adds	r6, #1
 800059e:	e7f2      	b.n	8000586 <__libc_init_array+0x1e>
 80005a0:	080005c8 	.word	0x080005c8
 80005a4:	080005c8 	.word	0x080005c8
 80005a8:	080005c8 	.word	0x080005c8
 80005ac:	080005cc 	.word	0x080005cc

080005b0 <_init>:
 80005b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b2:	bf00      	nop
 80005b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005b6:	bc08      	pop	{r3}
 80005b8:	469e      	mov	lr, r3
 80005ba:	4770      	bx	lr

080005bc <_fini>:
 80005bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005be:	bf00      	nop
 80005c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005c2:	bc08      	pop	{r3}
 80005c4:	469e      	mov	lr, r3
 80005c6:	4770      	bx	lr
